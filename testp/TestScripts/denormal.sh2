#!/bin/bash
#                                                                        2012-02-19 AgF

# Compile and run PMCTest for floating point instructions with various combinations of denormal operands
# (c) 2012 by Agner Fog. GNU General Public License www.gnu.org/licenses

echo -e "Floating point denormal operands etc.\n"  > results2/denormal.txt

. vars.sh

cases=( "normal + normal = normal"  \
        "normal + normal = denormal"  \
        "normal + denormal = normal"   \
        "normal + denormal = denormal"  \
        "denormal + denormal = normal"  \
        "denormal + denormal = denormal"  \
        "normal + normal = overflow"  \
        "normal + NAN = NAN"  \
        "normal + INF = INF"  \
        "INF + INF = INF"  \
        "INF - INF = NAN"  \
        "normal * normal = normal"  \
        "normal * normal = denormal"  \
        "normal * denormal = normal"  \
        "normal * denormal = denormal"  \
        "denormal * denormal = underflow"  \
        "normal * normal = underflow"  \
        "normal * normal = overflow"  \
        "normal * NAN = NAN"  \
        "normal * INF = INF"  \
        "0 * INF = NAN"  \
        )


for (( tcase = 0 ; tcase < ${#cases[@]} ; tcase++ ))
do

echo -e "\n\nCase $tcase: ${cases[$tcase]}"  >> results2/denormal.txt
$ass -f elf64 -o b64.o -Dtcase=$tcase -Pdenormal.inc TemplateB64.nasm
if [ $? -ne 0 ] ; then exit ; fi
g++ -m64 a64.o b64.o -ox -lpthread
if [ $? -ne 0 ] ; then exit ; fi
./x >> results2/denormal.txt

done

echo -e "\n\n\nSame, with flush-to-zero mode on"  >> results2/denormal.txt

for (( tcase = 0 ; tcase < ${#cases[@]} ; tcase++ ))
do

echo -e "\n\nCase $tcase: ${cases[$tcase]}"  >> results2/denormal.txt
$ass -f elf64 -o b64.o -Dtcase=$tcase -Dflushtoz=1 -Pdenormal.inc TemplateB64.nasm
if [ $? -ne 0 ] ; then exit ; fi
g++ -m64 a64.o b64.o -ox -lpthread
if [ $? -ne 0 ] ; then exit ; fi
./x >> results2/denormal.txt

done

echo -e "\n\n\nSame, with denormals-are-zero mode on"  >> results2/denormal.txt

for (( tcase = 0 ; tcase < ${#cases[@]} ; tcase++ ))
do

echo -e "\n\nCase $tcase: ${cases[$tcase]}"  >> results2/denormal.txt
$ass -f elf64 -o b64.o -Dtcase=$tcase -Ddenormalsz=1 -Pdenormal.inc TemplateB64.nasm
if [ $? -ne 0 ] ; then exit ; fi
g++ -m64 a64.o b64.o -ox -lpthread
if [ $? -ne 0 ] ; then exit ; fi
./x >> results2/denormal.txt

done

echo -e "\n\n\nSame, with flush-to-zero mode and denormals-are-zero mode on"  >> results2/denormal.txt

for (( tcase = 0 ; tcase < ${#cases[@]} ; tcase++ ))
do

echo -e "\n\nCase $tcase: ${cases[$tcase]}"  >> results2/denormal.txt
$ass -f elf64 -o b64.o -Dtcase=$tcase -Dflushtoz=1 -Ddenormalsz=1 -Pdenormal.inc TemplateB64.nasm
if [ $? -ne 0 ] ; then exit ; fi
g++ -m64 a64.o b64.o -ox -lpthread
if [ $? -ne 0 ] ; then exit ; fi
./x >> results2/denormal.txt

done

echo -e "\n"  >> results2/denormal.txt

